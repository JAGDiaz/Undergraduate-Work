kmeans.ani(mycluster, centers=5, pch=1:5, col=1:5)
mydata=matrix(runif(640),ncol=2)
mydata
plot(mydata)
fit <- kmeans(mydata, 8) # 5 cluster solution
fit
# get cluster means
aggregate(mydata,by=list(fit$cluster),FUN=mean)
# append cluster assignment
mycluster <- data.frame(mydata, fit$cluster)
mycluster
library(animation)
kmeans.ani(mycluster, centers=5, pch=1:5, col=1:5)
fit <- kmeans(mydata, 4) # 5 cluster solution
fit
# get cluster means
aggregate(mydata,by=list(fit$cluster),FUN=mean)
# append cluster assignment
mycluster <- data.frame(mydata, fit$cluster)
mycluster
library(animation)
kmeans.ani(mycluster, centers=5, pch=1:5, col=1:5)
set.seed(231)
mydata=matrix(runif(640),ncol=2)
mydata
plot(mydata)
fit <- kmeans(mydata, 8) # 5 cluster solution
fit
# get cluster means
aggregate(mydata,by=list(fit$cluster),FUN=mean)
# append cluster assignment
mycluster <- data.frame(mydata, fit$cluster)
mycluster
library(animation)
kmeans.ani(mycluster, centers=5, pch=1:5, col=1:5)
dxdt = function(x) {4*x^2 - 16}
x = seq(-3, 3, length = 100)
xaxis = seq(0,0,length = 100)
plot(x, dxdt(x), type = 'l', col = 'red', xlab = 'x', ylab = 'dx/dt')
lines(x, xaxis, type = 'l')
lines(xaxis, x, type = 'l')
legend("top", c("dx/dt = 4x^2-16", "Axes"), fill=c("red", "black"))
dxdt2 = function(x) {1 - 2*cos(x)}
x2 = seq(-pi, pi, length = 100)
plot(x2, dxdt2(x), type = 'l', col = 'red', xlab = 'x', ylab = 'dx/dt')
lines(x2, xaxis, type = 'l')
lines(xaxis, x2, type = 'l')
legend("top", c("dx/dt = 1 - 2cos(x)", "Axes"), fill=c("red", "black"))
dNdt = function(N) {2*N*(1 - N/5)*(-N/4 - 1)}
N = seq(-4.5, 5.5 , length = 100)
plot(N, dNdt(N), type = 'l', col = 'red', xlab = 'N', ylab = 'dN/dt')
lines(N, xaxis, type = 'l')
lines(xaxis, N, type = 'l')
legend("topright", c("dN/dt = rN(1 - N/K)(N/(K^-) - 1); r = 2, K = 5, (K^-) = -4", "Axes"), fill=c("red", "black"))
dat = read.csv("C:\\Users\\shotg\\Documents\\School Work\\Spring 2019\\Math 336 - Intro to Math Modeling\\data\\LifeExpenctancyWorldBank2018clean.csv", header = TRUE)
dat[1:3, 1:5]
dim(dat)
which(dat == "France")
x = dat[76, ]
dim(x)
yr = 1960:1989
le = x[3:32]
length(yr)
length(le)
plot(yr, le)
getwd()
ler=as.numeric(le)
par(mar=c(4.5,4.5,2,1.5))
plot(yr, ler, ylim=c(70,77), xlab="Time", ylab="Life Expectancy", main="Life Expectancy in France", cex.main=1.5, cex.lab=1.5, cex.axis=1.5)
#(Intercept) yr
#-367.9487 0.2233
abline(lm(ler~yr), col="blue", lwd=2)
text(1968,76, "Trend=0.2233 per year", cex=1.5, col="blue")
dat = read.csv("C:\\Users\\shotg\\Documents\\School Work\\Spring 2019\\Math 336 - Intro to Math Modeling\\Final\\JonesGlobalT.csv", header = TRUE)
dim(dat)
dat[, 1:4]
#6.1
time = dat$YEAR
temp = dat$JAN
plot(time, temp, type = 'l', lwd = 2, ylab = "Temperature [°C]", xlab = "Year", main = "Joseph Diaz's Plot of December Temperature Anomalies", col = 'red')
abline(lm(temp ~ time), col = 'green', lwd = 5)
text(1900, .5, "THIS IS TEXT", col = 'red')
lm(temp ~ time)
slope = lm(temp ~ time)$time
text(1900, .5, slope, col = 'red')
text(1900, .5, slope, col = 'red')
text(1900, .5,"%f" % slope , col = 'red')
text(1900, .5,("%f",slope) , col = 'red')
slope
slope = lm(temp ~ time)$time
slope
lm(temp ~ time)
text(1900, .5, "The linear trend has a slope of .00508 C/year", col = 'red')
plot(time, temp, type = 'l', lwd = 2, ylab = "Temperature [°C]", xlab = "Year", main = "Joseph Diaz's Plot of December Temperature Anomalies", col = 'red')
abline(lm(temp ~ time), col = 'green', lwd = 5)
lm(temp ~ time)
text(1900, .5, "The linear trend has a slope of .00508 C/year", col = 'red')
plot(time, temp, type = 'l', lwd = 2, ylab = "Temperature [°C]", xlab = "Year", main = "Joseph Diaz's Plot of January Temperature Anomalies", col = 'red')
abline(lm(temp ~ time), col = 'green', lwd = 5)
lm(temp ~ time)
text(1900, .5, "The linear trend has a slope of .00508 C/year", col = 'red')
dat = read.csv("C:\\Users\\shotg\\Documents\\School Work\\Spring 2019\\Math 336 - Intro to Math Modeling\\Final\\JonesGlobalT.csv", header = TRUE)
plot(time, temp, type = 'l', lwd = 2, ylab = "Temperature [°C]", xlab = "Year", main = "Joseph Diaz's Plot of January Temperature Anomalies", col = 'red')
#6.1
time = dat$YEAR
temp = dat$JAN
plot(time, temp, type = 'l', lwd = 2, ylab = "Temperature [°C]", xlab = "Year", main = "Joseph Diaz's Plot of January Temperature Anomalies", col = 'red')
abline(lm(temp ~ time), col = 'green', lwd = 5)
lm(temp ~ time)
text(1900, .5, "The linear trend has a slope of .00508 C/year", col = 'red')
plot(time, temp, type = 'l', lwd = 2, ylab = "Temperature [°C]", xlab = "Year", main = "Joseph Diaz's Plot of January Temperature Anomalies", col = 'blue')
abline(lm(temp ~ time), col = 'red', lwd = 5)
lm(temp ~ time)
text(1900, .5, "January temp trend has a slope of .508 degC/century", col = 'red')
#6.2
temp
#6.2
time
twentieth = temp[51:]
#6.2
Jan1900s = dat$JAN[51:]
dat
dim(dat)
#6.2
Jan1900s = dat[3,51:]
dat = read.csv("C:\\Users\\shotg\\Documents\\School Work\\Spring 2019\\Math 336 - Intro to Math Modeling\\Final\\JonesGlobalT.csv", header = TRUE)
dim(dat)
#6.1
time = dat$YEAR
temp = dat$JAN
plot(time, temp, type = 'l', lwd = 2, ylab = "Temperature [°C]", xlab = "Year", main = "Joseph Diaz's Plot of January Temperature Anomalies", col = 'blue')
abline(lm(temp ~ time), col = 'red', lwd = 5)
lm(temp ~ time)
text(1900, .5, "January temp trend has a slope of .508 degC/century", col = 'red')
#6.2
Jan1900s = dat[3,51:]
#6.2
N = 10
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in N){avtemps[i] = mean(time[51 + i: 61 + i])}
avtemps
#6.1
time = dat$YEAR
for(i in N){avtemps[i] = mean(time[51 + i*10: 61 + i*10])}
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in N){avtemps[i] = mean(time[51 + i*10: 61 + i*10])}
avtemps
rm(list=ls())
set.seed(time(0))
N = 1000000
n = 5
x = matrix(runif(n*N, -1, 1), ncol = n)
k = 0
for(i in 1:N){if((t(x[i,])%*%x[i,]) < 1) {k = k+1}}
k
(2^n)*(k/N)
pi^(n/2)/gamma(n/2 + 1)
#6.2
N = 10
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in 0:N-1){avtemps[i] = mean(time[51 + i*10: 61 + i*10])}
for(i in 0:N){avtemps[i] = mean(time[51 + i*10: 61 + i*10])}
for(i in 1:N){avtemps[i] = mean(time[51 + i*10: 61 + i*10])}
for(i in N){avtemps[i] = mean(time[51 + i*10: 61 + i*10]) print(i)}
for(i in N)
{
avtemps[i] = mean(time[51 + i*10: 61 + i*10])
print(i)
}
#6.2
N = 10
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in N)
{
avtemps[i] = mean(time[51 + i*10: 61 + i*10])
print(i)
}
avtemps
dat = read.csv("C:\\Users\\shotg\\Documents\\School Work\\Spring 2019\\Math 336 - Intro to Math Modeling\\Final\\JonesGlobalT.csv", header = TRUE)
dim(dat)
#6.1
time = dat$YEAR
temp = dat$JAN
plot(time, temp, type = 'l', lwd = 2, ylab = "Temperature [°C]", xlab = "Year", main = "Joseph Diaz's Plot of January Temperature Anomalies", col = 'blue')
abline(lm(temp ~ time), col = 'red', lwd = 5)
lm(temp ~ time)
text(1900, .5, "January temp trend has a slope of .508 degC/century", col = 'red')
#6.2
N = 10
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in N)
{
avtemps[i] = mean(time[51 + i*10: 61 + i*10])
print(i)
}
avtemps
#6.2
N = 10
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in 0:N)
{
avtemps[i] = mean(time[51 + i*10: 61 + i*10])
print(i)
}
avtemps
#6.2
N = 10
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in 0:N-1)
{
avtemps[i] = mean(time[51 + i*10: 61 + i*10])
print(i)
}
avtemps
#6.2
N = 10
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in 1:N)
{
avtemps[i] = mean(time[51 + i*10: 61 + i*10])
print(i)
}
avtemps
#6.2
N = 9
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in 0:N)
{
avtemps[i+1] = mean(time[51 + i*10: 61 + i*10])
print(i)
}
avtemps
rm(list=ls())
#6.2
N = 9
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in 0:N)
{
avtemps[i+1] = mean(temp[51 + i*10: 61 + i*10])
print(i)
}
avtemps
#6.1
time = dat$YEAR
temp = dat$JAN
dat = read.csv("C:\\Users\\shotg\\Documents\\School Work\\Spring 2019\\Math 336 - Intro to Math Modeling\\Final\\JonesGlobalT.csv", header = TRUE)
dim(dat)
#6.1
time = dat$YEAR
temp = dat$JAN
plot(time, temp, type = 'l', lwd = 2, ylab = "Temperature [°C]", xlab = "Year", main = "Joseph Diaz's Plot of January Temperature Anomalies", col = 'blue')
#6.2
N = 9
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in 0:N)
{
avtemps[i+1] = mean(temp[51 + i*10: 61 + i*10])
print(i)
}
avtemps
#6.2
N = 9
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in 0:N)
{
avtemps[i+1] = mean(temp[51 + i*10: 61 + i*10])
print(i)
}
avtemps
rm(list=ls())
dat = read.csv("C:\\Users\\shotg\\Documents\\School Work\\Spring 2019\\Math 336 - Intro to Math Modeling\\Final\\JonesGlobalT.csv", header = TRUE)
dim(dat)
#6.1
time = dat$YEAR
temp = dat$JAN
plot(time, temp, type = 'l', lwd = 2, ylab = "Temperature [°C]", xlab = "Year", main = "Joseph Diaz's Plot of January Temperature Anomalies", col = 'blue')
#6.2
N = 9
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in 0:N)
{
avtemps[i+1] = mean(temp[51 + i*10: 61 + i*10])
print(i)
}
avtemps
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in 0:N)
{
avtemps[i+1] = mean(temp[51 + i*10: 51 + i*10 + 10])
print(i)
}
avtemps
avtemps[i+1] = mean(temp[51 + i*10: 51 + i*10 + 10])
print(i)
{
avtemps[i+1] = mean(temp[51 + i*10: 51 + i*10 + 10])
print(i)
}
#6.2
N = 9
avtemps = c(0,0,0,0,0,0,0,0,0,0)
for(i in 0:N)
{
avtemps[i+1] = mean(temp[51 + i*10: 51 + i*10 + 10])
print(i)
}
avtemps
dat = read.csv("C:\\Users\\shotg\\Documents\\School Work\\Spring 2019\\Math 336 - Intro to Math Modeling\\Final\\JonesGlobalT.csv", header = TRUE)
dim(dat)
#6.1
time = dat$YEAR
temp = dat$JAN
plot(time, temp, type = 'l', lwd = 2, ylab = "Temperature [°C]", xlab = "Year", main = "Joseph Diaz's Plot of January Temperature Anomalies", col = 'blue')
abline(lm(temp ~ time), col = 'red', lwd = 5)
lm(temp ~ time)
text(1900, .5, "January temp trend has a slope of .508 degC/century", col = 'red')
avtemps = c(0,0,0,0,0,0,0,0,0,0)
avtemps[1] = mean(temp[51: 61])
avtemps[2] = mean(temp[61: 71])
avtemps[3] = mean(temp[71: 81])
avtemps[4] = mean(temp[81: 91])
avtemps[5] = mean(temp[91: 101])
avtemps[6] = mean(temp[101: 111])
avtemps[7] = mean(temp[111: 121])
avtemps[8] = mean(temp[121: 131])
avtemps[9] = mean(temp[131: 141])
avtemps[10] = mean(temp[141: 151])
avtemps
max(avtemps)
min(avtemps)
A = matrix(c(-200,-800,20,40), nrow=2)
b = c(ln(7.46/6.94),ln(7.72/6.94))
b = c(log(7.46/6.94),log(7.72/6.94))
print(solve(A,b))
a = solve(A,b)
dim(a)
print(a)
P = function(t){6.94*exp(4.562549e-3*t - (9.498672e-5/2)*t^2)}
P(50)
(abs(P(50) - 8.14)/8.14)*100
N = seq(40, 60, length = 100)
plot(P(N), N)
plot(N, P(N))
4.562549e-3/9.498672e-5
P(4.562549e-3/9.498672e-5)
(abs(P(50) - 8.14)/8.14)*100
P = function(t){(-12.57142)*(exp(-.68*t) - exp(-.33*t))}
N = seq(0, 610, length = 100)
plot(N, P(N))
P = function(t){(-12.57142)*(exp(-.68*t) - exp(-.33*t))}
N = seq(0, 10, length = 100)
plot(N, P(N))
df(P, t)
help df
help(df)
help(diff)
help(D())
help(D)
D(P(t), t)
D(P(t))
D(P)
D(P, t)
D(P, 't')
D(P(t), 't')
D(P(t), "t")
D(P, "t")
P = function(t){(-12.57142)*(exp(-.68*t) - exp(-.33*t))}
N = seq(0, 10, length = 100)
plot(N, P(N))
P(2.065714696)
P = function(t){480*(-12.57142)*(-(exp(-.68*t)/.68) + (exp(-.33*t)/.33)) + 9411.75829}
P(2)
P(6)
P(12)
w = function(t){-82*exp(-.053*t) + 85}
w = function(t){-82*exp(-.053*t) + 85}
plot(N, w(N))
w(2)
w(6)
w(12)
w = function(t){-82*exp(-.053*t) + 85}
t = seq(0, 30, length = 100)
plot(t, w(t))
w(1234)
c = function(t){(.1*P(t))/w(t)}
c(2)
c(6)
c(12)
plot(t, c(t))
D(c, "t")
D(c(t), "t")
cPrime = D(c(t), "t")
cPrime
cPrime = D(c(t))
cPrime = D(c, t)
cPrime = D(c, "t")
cPrime = D(c~t)
cPrime = D(c~"t")
cPrime = D(c(t)~t)
max(c(t))
c1 = function(t){c(t) - 28.05569}
uniroot(c1)
uniroot(c1, c(4, 6))
uniroot(c1, c(4,6))
uniroot(c1, c(4,7))
uniroot(c1, c(4))
uniroot(c1, c(4,5.5))
cPrime = deriv(c(t), t)
cPrime = deriv(c(t), "t")
uniroot(cPrime, c(4,5.5))
uniroot(cPrime)
uniroot(cPrime, N)
uniroot(cPrime, c(4, 6))
uniroot(cPrime, c(4))
uniroot(cPrime, 4, 6)
C = function(t){(.1*P(t))/w(t)}
cPrime = deriv(c(t), "t")
C = function(t){(.1*P(t))/w(t)}
cPrime = deriv(C(t), "t")
uniroot(cPrime, c(4,6))
View(c)
View(c)
clear
rm(list = ls())
A = function(t){(-12.57142)*(exp(-.68*t) - exp(-.33*t))}
N = seq(0, 10, length = 100)
plot(N, A(N))
A(2.065714696)
P = function(t){480*(-12.57142)*(-(exp(-.68*t)/.68) + (exp(-.33*t)/.33)) + 9411.75829}
P(2)
P(6)
P(12)
w = function(t){-82*exp(-.053*t) + 85}
t = seq(0, 30, length = 100)
plot(t, w(t))
w(2)
w(6)
w(12)
w(1234)
C = function(t){(.1*P(t))/w(t)}
cPrime = deriv(C(t), "t")
uniroot(cPrime, c(4,6))
plot(t, C(t))
plot(t, cPrime(t))
cPrime = deriv(C(t), "t")
plot(t, cPrime(t))
cPrime
plot(t, cPrime)
dim(cPrime)
t = seq(4, 6, length = 100)
plot(t, C(t))
t = seq(5, 5.5, length = 100)
plot(t, C(t))
t = seq(5, 5.2, length = 100)
plot(t, C(t))
t = seq(5.1, 5.15, length = 100)
plot(t, C(t))
t = seq(5.1, 5.12, length = 100)
plot(t, C(t))
t = seq(5.11, 5.115, length = 100)
plot(t, C(t))
t = seq(5.113, 5.114, length = 100)
plot(t, C(t))
t = seq(5.1133, 5.1136, length = 100)
plot(t, C(t))
# 1.41
CoinFlip4 = function(n)
{
flip = matrix(sample(0:1, 4*n, replace = TRUE), nrow = 4, byrow = FALSE)
total = flip[1,1:n] + flip[2,1:n] + flip[3,1:n] + flip[4,1:n]
mean(total == 1)
}
n = 100000
CoinFlip4(n)
# 1.41
CoinFlip4 = function(n)
{
flip = matrix(sample(0:1, 4*n, replace = TRUE), nrow = 4, byrow = FALSE)
total = flip[1,1:n] + flip[2,1:n] + flip[3,1:n] + flip[4,1:n]
mean(total == 1)
}
# 1.42
Divisible4710 = function(n)
{
num = sample(1:5000, n, replace = TRUE)
mean(num%%4==0|num%%7==0|num%%10==0)
}
# 1.43
SumTo8 = function(n)
{
rolls = matrix(sample(1:6, 2*n, replace = TRUE), nrow = 2, byrow = FALSE)
total = rolls[1,1:n] + rolls[2,1:n]
mean(total >= 8)
}
# 1.44
TetraDice = function(n)
{
rolls = matrix(sample(1:4, 5*n, replace = TRUE), nrow = 5, byrow = FALSE)
success = numeric(n)
for(i in 1:n)
{
success[i] = if(2 %in% rolls[1:5,i]) 1 else 0
}
mean(success)
}
n = 100000
CoinFlip4(n)
Divisible4710(n)
SumTo8(n)
source('C:/Users/shotg/Documents/School Work/Spring 2020/Stat 550; Applied Probability/Homework/Homework 4/Homework_4.R', echo=TRUE)
install.packages(rmarkdown)
install.packages("rmarkdown")
